% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{plot_conf_matrix}
\alias{plot_conf_matrix}
\title{Plot confusion Matrix}
\usage{
plot_conf_matrix(input, conf_type, output_dir)
}
\arguments{
\item{input}{A data frame containing the confusion matrix data with
columns \code{True}, \code{Predicted}, \code{Frequency}, and \code{Percentage}.}

\item{conf_type}{Character string specifying the confusion matrix type.
\itemize{
\item \code{"baseline"} for the Baseline Confusion Matrix
\item \code{"mlr"} for the MLR Confusion Matrix
\item \code{"rf"} for the Random Forest Confusion Matrix
}}

\item{output_dir}{Path to save the output .png file}
}
\value{
Saves the feature importance plot and returns the plot object.
}
\description{
Plot confusion Matrix
}
\examples{
helper_test_data <- tibble::tibble(
  Age = sample(10:50, 100, replace = TRUE),
  SystolicBP = sample(seq(70, 140, by = 10), 100, replace = TRUE),
  DiastolicBP = sample(seq(50, 90, by = 10), 100, replace = TRUE),
  BS = round(runif(100, 6.5, 13), 2),
  BodyTemp = rep(98, 100) + rnorm(100, mean = 0, sd = 0.5),
  HeartRate = sample(seq(70, 100, by = 2), 100, replace = TRUE),
  RiskLevel = sample(c("low risk", "mid risk", "high risk"), 100, replace = TRUE)
) \%>\%
  dplyr::mutate(RiskLevel = factor(RiskLevel, levels = c("low risk", "mid risk", "high risk"))) \%>\%
  dplyr::mutate(RiskLevel = stats::relevel(RiskLevel, ref = "low risk"))

generate_probs <- function(n) {
  probs <- matrix(runif(n * 3), nrow = n)
  probs <- probs / rowSums(probs)  # Normalize to ensure they sum to 1
  as.data.frame(probs)
}

helper_data_conf_pred <- tibble::tibble(
  ID = 1:100,
  Predicted_Class = sample(c("low risk", "mid risk", "high risk"), 100, replace = TRUE),
  `low risk` = generate_probs(100)[, 1],
  `mid risk` = generate_probs(100)[, 2],
  `high risk` = generate_probs(100)[, 3]
)

helper_data_conf_pred <- helper_data_conf_pred \%>\%
  dplyr::rowwise() \%>\%
  dplyr::mutate(
    Total = sum(`low risk`, `mid risk`, `high risk`)
  ) \%>\%
  dplyr::mutate(dplyr::across(`low risk`:`high risk`, ~ ./Total)) \%>\%
  dplyr::select(-Total)

helper_conf_matrix <- caret::confusionMatrix(
  as.factor(helper_data_conf_pred$Predicted_Class),
  as.factor(helper_test_data$RiskLevel))

helper_conf_table <- as.data.frame(helper_conf_matrix$table)
colnames(helper_conf_table) <- c("True", "Predicted", "Frequency")
helper_conf_table <- helper_conf_table \%>\%
  dplyr::mutate(True = factor(True, levels = c("low risk", "mid risk", "high risk")),
         Predicted = factor(Predicted, levels = c("low risk", "mid risk", "high risk"))) \%>\%
  dplyr::group_by(True) \%>\%
  dplyr::mutate(Percentage = ifelse(is.na(Frequency), 0,
    round((Frequency / sum(Frequency)) * 100, 1)))

plot_conf_matrix(helper_conf_table, "mlr", tempdir())
}
